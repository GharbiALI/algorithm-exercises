link pascal : https://onlinegdb.com/mspZh3AlE
result 

si (firstLargest == secondLargest) alors
    ecrire("There is no second largest number.")
sinon
    ecrire("Second largest: ", secondLargest)
fin si

pour i de 1 Ã  (n - 1) faire
    si (tb[i] > firstLargest) alors
        secondLargest = firstLargest
        firstLargest = tb[i]
    fin si

    si ( (tb[i] > secondLargest) et (tb[i] <> firstLargest) ) alors
        secondLargest = tb[i]
    fin si
fin pour

firtLargetN := tb[0];
secondLargetN := tb[0];

// remplir le tableau
pour i de 0 a (n-1) faire
       ecrire('TB[ ',i+1,' ] : ')
       lire(tb[i])
fin pour

repeter
       ecrire("GIve the size of the array : ")
       lire(n)
jusqua ( n > 1)


fin program
------------------------------------------------------------------------
T D O

name                 type            role
n                  integer     contains the size of the array
i                  integer     counter
firstLargestN      integer     contains the first largest number
secondLargestN     integer     contains the second largest number
tab                tab         contains numbers  


type

tab = arry [1..100] of integer 





