{link  :https://onlinegdb.com/moDftVrZt}
program mergeTwoSortedLists;

var
    arr1, arr2 : array[1..50] of integer;
    merArr : array[1..100] of integer;
    sizeArr1, sizeArr2, i, j, k,temp : integer;
    isSorted : boolean;
begin
    repeat
        writeln('Give the size of the first array: ');
        readln(sizeArr1);
    until(sizeArr1 > 0);
    
    repeat
        writeln('Give the size of the second array: ');
        readln(sizeArr2);
    until(sizeArr2 > 0);
    
    for i := 1 to sizeArr1 do
    begin
        
        repeat
           isSorted := true;
           write('arr1[', i, '] : ');
           read(arr1[i]);
           
           if (i > 1) and (arr1[i] < arr1[i - 1]) then
                isSorted := false;
        until(isSorted = true)   
    end;
    
    for i := 1 to sizeArr2 do
    begin
        
        repeat
           isSorted := true;
           write('arr2[', i, '] : ');
           read(arr2[i]);
           
           if (i > 1) and (arr2[i] < arr2[i - 1]) then
                isSorted := false;
        until(isSorted = true)   
    end;
    
    i := 1;
    j := 1;
    k := 1;
    
    while (i <= sizeArr1) and (j <= sizeArr2) do
    begin
        if (arr1[i] < arr2[j]) then
        begin
            merArr[k] := arr1[i];
            i := i + 1;
        end
        else
        begin
            merArr[k] := arr2[j];
            j := j + 1;
        end;
        k := k + 1;
    end;
    
    while (i <= sizeArr1) do
    begin
        merArr[k] := arr1[i];
        k := k + 1;
        i := i + 1;
    end;

    while (j <= sizeArr2) do
    begin
        merArr[k] := arr2[j];
        k := k + 1;
        j := j + 1;
    end;
    
    writeln('Merged Sorted List: ');
    for i := 1 to k - 1 do
        write(merArr[i], ' ');

    writeln;
end.
